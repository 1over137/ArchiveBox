# Usage:
#     docker compose run archivebox init --setup
#     docker compose up
#     echo "https://example.com" | docker compose run archivebox archivebox add
#     docker compose run archivebox add --depth=1 https://example.com/some/feed.rss
#     docker compose run archivebox config --set MEDIA_MAX_SIZE=750m
#     docker compose run archivebox help
# Documentation:
#     https://github.com/ArchiveBox/ArchiveBox/wiki/Docker#docker-compose


services:
    archivebox:
        image: archivebox/archivebox:latest
        ports:
            - 8000:8000
        volumes:
            - ./data:/data
        environment:
            # - ADMIN_USERNAME=admin            # create an admin user on first run with the given user/pass combo
            # - ADMIN_PASSWORD=SomeSecretPassword
            - ALLOWED_HOSTS=*                   # restrict this to only accept incoming traffic via specific domain name
            - PUBLIC_INDEX=True                 # set to False to prevent anonymous users from viewing snapshot list
            - PUBLIC_SNAPSHOTS=True             # set to False to prevent anonymous users from viewing snapshot content
            - PUBLIC_ADD_VIEW=False             # set to True to allow anonymous users to submit new URLs to archive
            - SEARCH_BACKEND_ENGINE=sonic       # uncomment these and sonic container below for better full-text search
            - SEARCH_BACKEND_HOST_NAME=sonic
            - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
            # - PUID=911                        # set to your host user's UID & GID if you encounter permissions issues
            # - PGID=911
            # - MEDIA_MAX_SIZE=750m             # increase this filesize limit to allow archiving larger audio/video files
            # - TIMEOUT=60                      # increase this number to 120+ seconds if you see many slow downloads timing out
            # - CHECK_SSL_VALIDITY=True         # set to False to disable strict SSL checking (allows saving URLs w/ broken certs)
            # - SAVE_ARCHIVE_DOT_ORG=True       # set to False to disable submitting all URLs to Archive.org when archiving
            # ...
            # add further configuration options from archivebox/config.py as needed (to apply them only to this container)
            # or set using `docker compose run archivebox config --set SOME_KEY=someval` (to persist config across all containers)
        # For ad-blocking during archiving, uncomment this section and pihole service section below
        # networks:
        #   - dns
        # dns:
        #   - 172.20.0.53

    ######## Optional Addons: tweak examples below as needed for your specific use case ########

    ### Enable ability to run regularly scheduled archiving tasks by uncommenting this container
    #   $ docker compose run archivebox schedule --every=day --depth=1 'https://example.com/some/rss/feed.xml'
    # then restart the scheduler container to apply the changes to the schedule
    #   $ docker compose restart archivebox_scheduler

    archivebox_scheduler:
       image: archivebox/archivebox:latest
       command: schedule --foreground
       environment:
           - TIMEOUT=120                       # increase if you see timeouts often during archiving / on slow networks
           - ONLY_NEW=True                     # set to False to retry previously failed URLs when re-adding instead of skipping them
           # - PUID=502                        # set to your host user's UID & GID if you encounter permissions issues
           # - PGID=20
       volumes:
           - ./data:/data
       # cpus: 2                               # uncomment / edit these values to limit container resource consumption
       # mem_limit: 2048m
       # shm_size: 1024m


    ### Runs the Sonic full-text search backend, config file is auto-downloaded into sonic.cfg:
    #   After starting, backfill any existing Snapshots into the full-text index:
    #   $ docker-compose run archivebox update --index-only

    sonic:
        image: valeriansaliou/sonic:latest
        build:
            # custom build just auto-downloads archivebox's default sonic.cfg as a convenience
            # not needed if you have already have /etc/sonic.cfg
            dockerfile_inline: |
                FROM quay.io/curl/curl:latest AS setup
                RUN curl -fsSL 'https://raw.githubusercontent.com/ArchiveBox/ArchiveBox/main/etc/sonic.cfg' > /tmp/sonic.cfg
                FROM valeriansaliou/sonic:latest
                COPY --from=setup /tmp/sonic.cfg /etc/sonic.cfg
        expose:
            - 1491
        environment:
            - SEARCH_BACKEND_PASSWORD=SomeSecretPassword
        volumes:
            - ./etc/sonic.cfg:/etc/sonic.cfg
            - ./data/sonic:/var/lib/sonic/store


    ### Example: Watch the ArchiveBox browser in realtime as it archives things,
    # or remote control it to set up logins and credentials for sites you want to archive.
    # https://github.com/ArchiveBox/ArchiveBox/wiki/Chromium-Install#setting-up-a-chromium-user-profile

    novnc:
        image: theasp/novnc:latest
        environment:
            - DISPLAY_WIDTH=1920
            - DISPLAY_HEIGHT=1080
            - RUN_XTERM=no
        ports:
            # to view/control ArchiveBox's browser, visit: http://localhost:8080/vnc.html
            - "8080:8080"

    
    ### Example: Put Nginx in front of the ArchiveBox server for SSL termination

    # nginx:
    #     image: nginx:alpine
    #     ports:
    #         - 443:443
    #         - 80:80
    #     volumes:
    #         - ./etc/nginx.conf:/etc/nginx/nginx.conf
    #         - ./data:/var/www


    ### Example: To run pihole in order to block ad/tracker requests during archiving,
    # uncomment this block and set up pihole using its admin interface

    # pihole:
    #   image: pihole/pihole:latest
    #   ports:
    #     - 127.0.0.1:8090:80       # uncomment to access the admin HTTP interface on http://localhost:8090
    #   environment:
    #     - WEBPASSWORD=SET_THIS_TO_SOME_SECRET_PASSWORD_FOR_ADMIN_DASHBOARD
    #     - DNSMASQ_LISTENING=all
    #   dns:
    #     - 127.0.0.1
    #     - 1.1.1.1
    #   networks:
    #     dns:
    #       ipv4_address: 172.20.0.53
    #   volumes:
    #     - ./etc/pihole:/etc/pihole
    #     - ./etc/dnsmasq:/etc/dnsmasq.d


    ### Example: run all your ArchiveBox traffic through a WireGuard VPN tunnel

    # wireguard:
    #   image: linuxserver/wireguard:latest
    #   network_mode: 'service:archivebox'
    #   cap_add:
    #     - NET_ADMIN
    #     - SYS_MODULE
    #   sysctls:
    #     - net.ipv4.conf.all.rp_filter=2
    #     - net.ipv4.conf.all.src_valid_mark=1
    #   volumes:
    #     - /lib/modules:/lib/modules
    #     - ./wireguard.conf:/config/wg0.conf:ro


    ### Example: Run browsertrix in parallel with ArchiveBox

    # browsertrix:
    #     image: webrecorder/browsertrix-crawler:latest
    #     volumes:
    #         - ./browsertrix:/crawls:z

    ### Example: Run PYWB in parallel and auto-import WARCs from ArchiveBox

    # pywb:
    #     image: webrecorder/pywb:latest
    #     entrypoint: /bin/sh -c '(wb-manager init default || test $$? -eq 2) && wb-manager add default /archivebox/archive/*/warc/*.warc.gz; wayback;'
    #     environment:
    #         - INIT_COLLECTION=archivebox
    #     ports:
    #         - 8080:8080
    #     volumes:
    #         - ./data:/archivebox
    #         - ./data/wayback:/webarchive


networks:

    # network needed for pihole container to offer :53 dns resolving on fixed ip for archivebox container
    dns:
        ipam:
            driver: default
            config:
                - subnet: 172.20.0.0/24
