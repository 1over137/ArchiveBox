# Generated by Django 5.0.6 on 2024-08-18 02:48

from django.db import migrations

from django.db import migrations
from datetime import datetime
from abid_utils.abid import ABID


def update_snapshot_ids(apps, schema_editor):
    Snapshot = apps.get_model("core", "Snapshot")
    num_total = Snapshot.objects.all().count()
    print(f'   Updating {num_total} Snapshot.id, Snapshot.uuid values in place...')
    for idx, snapshot in enumerate(Snapshot.objects.all().only('abid').iterator()):
        assert snapshot.abid
        snapshot.uuid = ABID.parse(snapshot.abid).uuid
        snapshot.save(update_fields=["uuid"])
        assert str(ABID.parse(snapshot.abid).uuid) == str(snapshot.uuid)
        if idx % 1000 == 0:
            print(f'Migrated {idx}/{num_total} Snapshot objects...')

def update_archiveresult_ids(apps, schema_editor):
    ArchiveResult = apps.get_model("core", "ArchiveResult")
    num_total = ArchiveResult.objects.all().count()
    print(f'   Updating {num_total} ArchiveResult.id, ArchiveResult.uuid values in place... (may take an hour or longer for large collections...)')
    for idx, result in enumerate(ArchiveResult.objects.all().only('abid').iterator()):
        assert result.abid
        result.uuid = ABID.parse(result.abid).uuid
        result.save(update_fields=["uuid"])
        assert str(ABID.parse(result.abid).uuid) == str(result.uuid)
        if idx % 5000 == 0:
            print(f'Migrated {idx}/{num_total} ArchiveResult objects...')


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0026_archiveresult_created_archiveresult_created_by_and_more'),
    ]

    operations = [
        migrations.RunPython(update_snapshot_ids, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(update_archiveresult_ids, reverse_code=migrations.RunPython.noop),
    ]


