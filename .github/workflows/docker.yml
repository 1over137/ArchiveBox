name: Docker

on:
  push:
    branches:
      - master
  release:
    types:
      - created

env:
  DOCKER_IMAGE: archivebox-ci


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1

      # TODO: as of 2020-11 this helper layer broke, upgrade and re-enable this once it's usable again
      # - uses: satackey/action-docker-layer-caching@v0.0.8

      - name: Build image
        run: |
          docker build . -t "$DOCKER_IMAGE"

      - name: Init data dir
        run: |
          mkdir data
          docker run -v "$PWD"/data:/data "$DOCKER_IMAGE" init

      - name: Run test server
        run: |
          sudo bash -c 'echo "127.0.0.1  www.test-nginx-1.local www.test-nginx-2.local" >> /etc/hosts'
          docker run --name www-nginx -p 80:80 -d nginx

      - name: Add link
        run: |
          docker run -v "$PWD"/data:/data --network host "$DOCKER_IMAGE" add http://www.test-nginx-1.local

      - name: Add stdin link
        run: |
          echo "http://www.test-nginx-2.local" | docker run -i --network host -v "$PWD"/data:/data "$DOCKER_IMAGE" add

      - name: List links
        run: |
          docker run -v "$PWD"/data:/data "$DOCKER_IMAGE" list | grep -q "www.test-nginx-1.local" || { echo "The site 1 isn't in the list"; exit 1; }
          docker run -v "$PWD"/data:/data "$DOCKER_IMAGE" list | grep -q "www.test-nginx-2.local" || { echo "The site 2 isn't in the list"; exit 1; }

      - name: Start docker-compose stack
        run: |
          docker-compose run archivebox init
          docker-compose up -d
          sleep 5
          curl --silent --location 'http://127.0.0.1:8000' | grep 'ArchiveBox'
          curl --silent --location 'http://127.0.0.1:8000/static/admin/js/jquery.init.js' | grep 'window.django'

      - name: Check added urls show up in index
        run: |
          docker-compose run archivebox add 'http://example.com/#test_docker' --index-only
          curl --silent --location 'http://127.0.0.1:8000' | grep 'http://example.com/#test_docker'
          docker-compose down || true

  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Login
        uses: docker/login-action@v1
        with:
           username: ${{ secrets.DOCKER_USERNAME }}
           password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true
      
      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/archivebox:latest
            ${{ secrets.DOCKER_USERNAME }}/archivebox:${{ github.sha }}
            archivebox/archivebox:latest
            archivebox/archivebox:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64,linux/arm64,linux/arm/v7
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
